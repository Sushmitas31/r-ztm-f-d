{
  "openapi": "3.0.0",
  "info": {
    "title": "Task Manager API",
    "description": "A RESTful API for managing tasks with user authentication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "username": {"type": "string"},
          "email": {"type": "string"},
          "role": {"type": "string", "enum": ["user", "admin"]},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "completed": {"type": "boolean"},
          "user_id": {"type": "integer"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "UserRegister": {
        "type": "object",
        "required": ["username", "email", "password", "confirm_password"],
        "properties": {
          "username": {"type": "string", "minLength": 3, "maxLength": 80},
          "email": {"type": "string", "format": "email"},
          "password": {"type": "string", "minLength": 6},
          "confirm_password": {"type": "string"}
        }
      },
      "UserLogin": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {"type": "string"},
          "password": {"type": "string"}
        }
      },
      "TaskCreate": {
        "type": "object",
        "required": ["title"],
        "properties": {
          "title": {"type": "string", "minLength": 1, "maxLength": 200},
          "description": {"type": "string"},
          "completed": {"type": "boolean", "default": false}
        }
      },
      "TaskUpdate": {
        "type": "object",
        "properties": {
          "title": {"type": "string", "minLength": 1, "maxLength": 200},
          "description": {"type": "string"},
          "completed": {"type": "boolean"}
        }
      }
    }
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UserRegister"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error or user already exists"}
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/UserLogin"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "access_token": {"type": "string"},
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "401": {"description": "Invalid credentials"}
        }
      }
    },
    "/api/auth/profile": {
      "get": {
        "tags": ["Authentication"],
        "summary": "Get current user profile",
        "security": [{"BearerAuth": []}],
        "responses": {
          "200": {
            "description": "User profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"}
                  }
                }
              }
            }
          },
          "401": {"description": "Unauthorized"}
        }
      }
    },
    "/api/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks with pagination and filtering",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {"type": "integer", "default": 1},
            "description": "Page number"
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": {"type": "integer", "default": 10},
            "description": "Items per page (max 100)"
          },
          {
            "name": "completed",
            "in": "query",
            "schema": {"type": "boolean"},
            "description": "Filter by completion status"
          },
          {
            "name": "search",
            "in": "query",
            "schema": {"type": "string"},
            "description": "Search in title and description"
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Task"}
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "page": {"type": "integer"},
                        "per_page": {"type": "integer"},
                        "total": {"type": "integer"},
                        "pages": {"type": "integer"},
                        "has_next": {"type": "boolean"},
                        "has_prev": {"type": "boolean"}
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "security": [{"BearerAuth": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/TaskCreate"}
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "task": {"$ref": "#/components/schemas/Task"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error"}
        }
      }
    },
    "/api/tasks/{task_id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a specific task",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task": {"$ref": "#/components/schemas/Task"}
                  }
                }
              }
            }
          },
          "403": {"description": "Access denied"},
          "404": {"description": "Task not found"}
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a specific task",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {"$ref": "#/components/schemas/TaskUpdate"}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"},
                    "task": {"$ref": "#/components/schemas/Task"}
                  }
                }
              }
            }
          },
          "400": {"description": "Validation error"},
          "403": {"description": "Access denied"},
          "404": {"description": "Task not found"}
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a specific task",
        "security": [{"BearerAuth": []}],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {"type": "integer"}
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string"}
                  }
                }
              }
            }
          },
          "403": {"description": "Access denied"},
          "404": {"description": "Task not found"}
        }
      }
    }
  }
}
